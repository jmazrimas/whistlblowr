%div.row
  %div.single-complaint.complaint-container.col.s12.z-depth-2

    - if flash[:comp_key] && !@investigator_authenticated
      %div.new-complaint-notice.row.col.s12
        %p.montserrat-header-bold.complaint-key="Secret Complaint Key: #{flash[:comp_key]}"
        %p.montserrat-header-bold.complaint-pin="Secret Complaint Pin: #{flash[:comp_pin]}"
        %p Save both, this key and pin! You can revisit this page by providing these values on the submission page:
        =image_tag("retrieve-complaint.png", class: "retrieve-complaint")
        %p If you have not provided contact information, the Project Six team may try to communicate with you using the anonymous messaging below.
        %h3.montserrat-header Your Complaint
        = flash[:comp_message]

    - if @investigator_authenticated
      %div.col.s12
        %h5.montserrat-header-bold Details of Complaint:
        =@complaint.content
      -# -if @complaint.allegation_types
      -#   %div.col.s12
      -#     %h5.montserrat-header Allegations:
      -#     = @complaint.allegation_types_as_nice_string
      -if @complaint.media.length > 0
        %div.col.s12
          %h5 Files:
          -@complaint.media.each do |m|
            %a{ :href => m, :target => "_blank"}
              %span= m.file.filename
    - else
      %div.col.s12
        %h5.montserrat-header-bold Thank You
        %p Thank you for submitting a report. You may be contacted for additional information if you have provided contact info. Otherwise, additional questions may be displayed below in order to solicit information and protect your anonymity.

    %div.col.s12
      %div
        %span{ :style => "font-weight: bold;" }Created:
        %span=@complaint.created_at.strftime("%Y/%m/%d")
    - if @investigator_authenticated
      %div.col.s12
        %div
          %span{ :style => "font-weight: bold;" }Contact Info:
          %span=@complaint.user.to_s
    %div.col.s12
      %br

- if @investigator_authenticated
  - if @complaint.media.length > 0
    %a.waves-effect.waves-light.btn{ href: complaints_download_path(complaint_key: @complaint.key) } Download
  %a.waves-effect.waves-light.btn{ href: complaints_path } Back
  = link_to [:podio_export, @complaint], remote: true, class: "send-podio-button btn #{'disabled' if @complaint.exists_in_podio?}"  do
    Send to Podio
  %br
%br
%br



%div.row
  %div.single-complaint.complaint-container.col.s12.z-depth-2
    %div.col.s12
      %h5.montserrat-header-bold Create a new Message:
      = form_for(@message, remote: true) do |f|
        %div.row
          = f.hidden_field(:complaint_id, :value => @complaint.id)
          %div.input-field.col.s12
            = f.text_area :text, class: "materialize-textarea flow-text message-body", placeholder: "Message", id: "textarea1"
        %div.row
          %div.input-field.file-field.col.s12
            = f.submit "Send", class: "btn", :id=>"send-message"
      -if @complaint.messages.length>0
        %h5 Messages:
      %div#message-container
        - @messages.each do |message|
          =render partial: "messages/show", locals: {message: message}
    %div.pagination
      = paginate @messages
